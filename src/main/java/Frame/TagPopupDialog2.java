/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Frame;

import imagemanager.*;
import java.awt.Component;
import java.awt.Frame;
import java.util.ArrayList;
import javax.swing.JCheckBox;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListCellRenderer;
import javax.swing.ListModel;

/**
 *
 * @author ADMIN
 */
public class TagPopupDialog2 extends javax.swing.JDialog {

    private TagManager tagManager = TagManager.getInstance();
    private Manager manager = Manager.getInstance();
    private ArrayList<JCheckBox> checkboxList = new ArrayList<>();
    private Image2 selectedImage2;

    /**
     * Creates new form TagPopupDialog
     */
    public TagPopupDialog2(Frame parent, boolean modal, Image2 image2) {
        super(parent, modal);
        initComponents();
        selectedImage2 = image2;
        loadTags(image2);
        pack();
        if (checkboxList.isEmpty()){
            JOptionPane.showMessageDialog(null,"There seem to be no tag to load, create tag using the [Tag menu] button","Image Manager[Edit tag]",JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void loadTags(Image2 image2) {
        checkboxList.clear();
        for (Tag tag : tagManager.getMap().values()) {
            JCheckBox checkbox = new JCheckBox(tag.getName());
            if (image2.hasTag(tag)) {
                checkbox.setSelected(true);
            }
            checkboxList.add(checkbox);
            checkboxPanel.add(checkbox);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        checkboxPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        confirmButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        checkboxPanel.setLayout(new java.awt.GridLayout(0, 3));
        jScrollPane1.setViewportView(checkboxPanel);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.GridLayout(1, 2));

        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });
        jPanel2.add(confirmButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        jPanel2.add(cancelButton);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed

        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        if (selectedImage2 != null) {
            for (JCheckBox checkbox : checkboxList) {
                if (checkbox.isSelected()) {
                    selectedImage2.addTag(tagManager.getTag(checkbox.getText()));
                } else {
                    selectedImage2.removeTag(tagManager.getTag(checkbox.getText()));
                }
            }
            this.dispose();
        }
    }//GEN-LAST:event_confirmButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel checkboxPanel;
    private javax.swing.JButton confirmButton;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
